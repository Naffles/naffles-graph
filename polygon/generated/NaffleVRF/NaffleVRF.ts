// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class ChainlinkRequestFulfilled extends ethereum.Event {
  get params(): ChainlinkRequestFulfilled__Params {
    return new ChainlinkRequestFulfilled__Params(this);
  }
}

export class ChainlinkRequestFulfilled__Params {
  _event: ChainlinkRequestFulfilled;

  constructor(event: ChainlinkRequestFulfilled) {
    this._event = event;
  }

  get requestId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get naffleId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get winningNumber(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }
}

export class NaffleWinnerRolled extends ethereum.Event {
  get params(): NaffleWinnerRolled__Params {
    return new NaffleWinnerRolled__Params(this);
  }
}

export class NaffleWinnerRolled__Params {
  _event: NaffleWinnerRolled;

  constructor(event: NaffleWinnerRolled) {
    this._event = event;
  }

  get naffleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class NaffleVRF__chainlinkRequestStatusResult {
  value0: boolean;
  value1: boolean;
  value2: BigInt;
  value3: BigInt;

  constructor(
    value0: boolean,
    value1: boolean,
    value2: BigInt,
    value3: BigInt
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromBoolean(this.value0));
    map.set("value1", ethereum.Value.fromBoolean(this.value1));
    map.set("value2", ethereum.Value.fromUnsignedBigInt(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    return map;
  }

  getFulfilled(): boolean {
    return this.value0;
  }

  getExists(): boolean {
    return this.value1;
  }

  getRandomNumber(): BigInt {
    return this.value2;
  }

  getNaffleId(): BigInt {
    return this.value3;
  }
}

export class NaffleVRF extends ethereum.SmartContract {
  static bind(address: Address): NaffleVRF {
    return new NaffleVRF("NaffleVRF", address);
  }

  COORDINATOR(): Address {
    let result = super.call("COORDINATOR", "COORDINATOR():(address)", []);

    return result[0].toAddress();
  }

  try_COORDINATOR(): ethereum.CallResult<Address> {
    let result = super.tryCall("COORDINATOR", "COORDINATOR():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  VRFManager(): Address {
    let result = super.call("VRFManager", "VRFManager():(address)", []);

    return result[0].toAddress();
  }

  try_VRFManager(): ethereum.CallResult<Address> {
    let result = super.tryCall("VRFManager", "VRFManager():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  chainlinkRequestStatus(
    param0: BigInt
  ): NaffleVRF__chainlinkRequestStatusResult {
    let result = super.call(
      "chainlinkRequestStatus",
      "chainlinkRequestStatus(uint256):(bool,bool,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return new NaffleVRF__chainlinkRequestStatusResult(
      result[0].toBoolean(),
      result[1].toBoolean(),
      result[2].toBigInt(),
      result[3].toBigInt()
    );
  }

  try_chainlinkRequestStatus(
    param0: BigInt
  ): ethereum.CallResult<NaffleVRF__chainlinkRequestStatusResult> {
    let result = super.tryCall(
      "chainlinkRequestStatus",
      "chainlinkRequestStatus(uint256):(bool,bool,uint256,uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new NaffleVRF__chainlinkRequestStatusResult(
        value[0].toBoolean(),
        value[1].toBoolean(),
        value[2].toBigInt(),
        value[3].toBigInt()
      )
    );
  }

  chainlinkVRFCallbackGasLimit(): BigInt {
    let result = super.call(
      "chainlinkVRFCallbackGasLimit",
      "chainlinkVRFCallbackGasLimit():(uint32)",
      []
    );

    return result[0].toBigInt();
  }

  try_chainlinkVRFCallbackGasLimit(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "chainlinkVRFCallbackGasLimit",
      "chainlinkVRFCallbackGasLimit():(uint32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  chainlinkVRFGasLaneKeyHash(): Bytes {
    let result = super.call(
      "chainlinkVRFGasLaneKeyHash",
      "chainlinkVRFGasLaneKeyHash():(bytes32)",
      []
    );

    return result[0].toBytes();
  }

  try_chainlinkVRFGasLaneKeyHash(): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "chainlinkVRFGasLaneKeyHash",
      "chainlinkVRFGasLaneKeyHash():(bytes32)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  chainlinkVRFRequestConfirmations(): i32 {
    let result = super.call(
      "chainlinkVRFRequestConfirmations",
      "chainlinkVRFRequestConfirmations():(uint16)",
      []
    );

    return result[0].toI32();
  }

  try_chainlinkVRFRequestConfirmations(): ethereum.CallResult<i32> {
    let result = super.tryCall(
      "chainlinkVRFRequestConfirmations",
      "chainlinkVRFRequestConfirmations():(uint16)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toI32());
  }

  chainlinkVRFSubscriptionId(): BigInt {
    let result = super.call(
      "chainlinkVRFSubscriptionId",
      "chainlinkVRFSubscriptionId():(uint64)",
      []
    );

    return result[0].toBigInt();
  }

  try_chainlinkVRFSubscriptionId(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "chainlinkVRFSubscriptionId",
      "chainlinkVRFSubscriptionId():(uint64)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  naffleIdToChainlinkRequestId(param0: BigInt): BigInt {
    let result = super.call(
      "naffleIdToChainlinkRequestId",
      "naffleIdToChainlinkRequestId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );

    return result[0].toBigInt();
  }

  try_naffleIdToChainlinkRequestId(
    param0: BigInt
  ): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "naffleIdToChainlinkRequestId",
      "naffleIdToChainlinkRequestId(uint256):(uint256)",
      [ethereum.Value.fromUnsignedBigInt(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _vrfCoordinator(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _subscriptionId(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _gasLaneKeyHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get _callbackGasLimit(): BigInt {
    return this._call.inputValues[3].value.toBigInt();
  }

  get _requestConfirmations(): i32 {
    return this._call.inputValues[4].value.toI32();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DrawWinnerCall extends ethereum.Call {
  get inputs(): DrawWinnerCall__Inputs {
    return new DrawWinnerCall__Inputs(this);
  }

  get outputs(): DrawWinnerCall__Outputs {
    return new DrawWinnerCall__Outputs(this);
  }
}

export class DrawWinnerCall__Inputs {
  _call: DrawWinnerCall;

  constructor(call: DrawWinnerCall) {
    this._call = call;
  }

  get _naffleId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class DrawWinnerCall__Outputs {
  _call: DrawWinnerCall;

  constructor(call: DrawWinnerCall) {
    this._call = call;
  }
}

export class RawFulfillRandomWordsCall extends ethereum.Call {
  get inputs(): RawFulfillRandomWordsCall__Inputs {
    return new RawFulfillRandomWordsCall__Inputs(this);
  }

  get outputs(): RawFulfillRandomWordsCall__Outputs {
    return new RawFulfillRandomWordsCall__Outputs(this);
  }
}

export class RawFulfillRandomWordsCall__Inputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }

  get requestId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get randomWords(): Array<BigInt> {
    return this._call.inputValues[1].value.toBigIntArray();
  }
}

export class RawFulfillRandomWordsCall__Outputs {
  _call: RawFulfillRandomWordsCall;

  constructor(call: RawFulfillRandomWordsCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetChainlinkVRFSettingsCall extends ethereum.Call {
  get inputs(): SetChainlinkVRFSettingsCall__Inputs {
    return new SetChainlinkVRFSettingsCall__Inputs(this);
  }

  get outputs(): SetChainlinkVRFSettingsCall__Outputs {
    return new SetChainlinkVRFSettingsCall__Outputs(this);
  }
}

export class SetChainlinkVRFSettingsCall__Inputs {
  _call: SetChainlinkVRFSettingsCall;

  constructor(call: SetChainlinkVRFSettingsCall) {
    this._call = call;
  }

  get _subscriptionId(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }

  get _gasLaneKeyHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }

  get _callbackGasLimit(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _requestConfirmations(): i32 {
    return this._call.inputValues[3].value.toI32();
  }
}

export class SetChainlinkVRFSettingsCall__Outputs {
  _call: SetChainlinkVRFSettingsCall;

  constructor(call: SetChainlinkVRFSettingsCall) {
    this._call = call;
  }
}

export class SetVRFManagerCall extends ethereum.Call {
  get inputs(): SetVRFManagerCall__Inputs {
    return new SetVRFManagerCall__Inputs(this);
  }

  get outputs(): SetVRFManagerCall__Outputs {
    return new SetVRFManagerCall__Outputs(this);
  }
}

export class SetVRFManagerCall__Inputs {
  _call: SetVRFManagerCall;

  constructor(call: SetVRFManagerCall) {
    this._call = call;
  }

  get _newVRFManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetVRFManagerCall__Outputs {
  _call: SetVRFManagerCall;

  constructor(call: SetVRFManagerCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
