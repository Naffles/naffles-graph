// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt,
} from "@graphprotocol/graph-ts";

export class DiamondCut extends ethereum.Event {
  get params(): DiamondCut__Params {
    return new DiamondCut__Params(this);
  }
}

export class DiamondCut__Params {
  _event: DiamondCut;

  constructor(event: DiamondCut) {
    this._event = event;
  }

  get facetCuts(): Array<DiamondCutFacetCutsStruct> {
    return this._event.parameters[0].value.toTupleArray<DiamondCutFacetCutsStruct>();
  }

  get target(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get data(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class DiamondCutFacetCutsStruct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get selectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class L2NaffleCancelled extends ethereum.Event {
  get params(): L2NaffleCancelled__Params {
    return new L2NaffleCancelled__Params(this);
  }
}

export class L2NaffleCancelled__Params {
  _event: L2NaffleCancelled;

  constructor(event: L2NaffleCancelled) {
    this._event = event;
  }

  get naffleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get messageHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class L2NaffleCreated extends ethereum.Event {
  get params(): L2NaffleCreated__Params {
    return new L2NaffleCreated__Params(this);
  }
}

export class L2NaffleCreated__Params {
  _event: L2NaffleCreated;

  constructor(event: L2NaffleCreated) {
    this._event = event;
  }

  get naffleTokenInformation(): L2NaffleCreatedNaffleTokenInformationStruct {
    return changetype<L2NaffleCreatedNaffleTokenInformationStruct>(
      this._event.parameters[0].value.toTuple(),
    );
  }

  get naffleId(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[2].value.toAddress();
  }

  get paidTicketSpots(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get openEntryTicketSpots(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }

  get ticketPriceInWei(): BigInt {
    return this._event.parameters[5].value.toBigInt();
  }

  get endTime(): BigInt {
    return this._event.parameters[6].value.toBigInt();
  }

  get naffleType(): i32 {
    return this._event.parameters[7].value.toI32();
  }
}

export class L2NaffleCreatedNaffleTokenInformationStruct extends ethereum.Tuple {
  get tokenAddress(): Address {
    return this[0].toAddress();
  }

  get nftId(): BigInt {
    return this[1].toBigInt();
  }

  get amount(): BigInt {
    return this[2].toBigInt();
  }

  get naffleTokenType(): i32 {
    return this[3].toI32();
  }
}

export class L2NaffleFinished extends ethereum.Event {
  get params(): L2NaffleFinished__Params {
    return new L2NaffleFinished__Params(this);
  }
}

export class L2NaffleFinished__Params {
  _event: L2NaffleFinished;

  constructor(event: L2NaffleFinished) {
    this._event = event;
  }

  get naffleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get winner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get winningTicketIdOnNaffle(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get messageHash(): Bytes {
    return this._event.parameters[3].value.toBytes();
  }
}

export class L2NafflePostponed extends ethereum.Event {
  get params(): L2NafflePostponed__Params {
    return new L2NafflePostponed__Params(this);
  }
}

export class L2NafflePostponed__Params {
  _event: L2NafflePostponed;

  constructor(event: L2NafflePostponed) {
    this._event = event;
  }

  get naffleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get newEndTime(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class OpenEntryTicketsUsed extends ethereum.Event {
  get params(): OpenEntryTicketsUsed__Params {
    return new OpenEntryTicketsUsed__Params(this);
  }
}

export class OpenEntryTicketsUsed__Params {
  _event: OpenEntryTicketsUsed;

  constructor(event: OpenEntryTicketsUsed) {
    this._event = event;
  }

  get naffleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get owner(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get ticketIds(): Array<BigInt> {
    return this._event.parameters[2].value.toBigIntArray();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class RandomNumberRequested extends ethereum.Event {
  get params(): RandomNumberRequested__Params {
    return new RandomNumberRequested__Params(this);
  }
}

export class RandomNumberRequested__Params {
  _event: RandomNumberRequested;

  constructor(event: RandomNumberRequested) {
    this._event = event;
  }

  get naffleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class RoleAdminChanged extends ethereum.Event {
  get params(): RoleAdminChanged__Params {
    return new RoleAdminChanged__Params(this);
  }
}

export class RoleAdminChanged__Params {
  _event: RoleAdminChanged;

  constructor(event: RoleAdminChanged) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get previousAdminRole(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }

  get newAdminRole(): Bytes {
    return this._event.parameters[2].value.toBytes();
  }
}

export class RoleGranted extends ethereum.Event {
  get params(): RoleGranted__Params {
    return new RoleGranted__Params(this);
  }
}

export class RoleGranted__Params {
  _event: RoleGranted;

  constructor(event: RoleGranted) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class RoleRevoked extends ethereum.Event {
  get params(): RoleRevoked__Params {
    return new RoleRevoked__Params(this);
  }
}

export class RoleRevoked__Params {
  _event: RoleRevoked;

  constructor(event: RoleRevoked) {
    this._event = event;
  }

  get role(): Bytes {
    return this._event.parameters[0].value.toBytes();
  }

  get account(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get sender(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class TicketsBought extends ethereum.Event {
  get params(): TicketsBought__Params {
    return new TicketsBought__Params(this);
  }
}

export class TicketsBought__Params {
  _event: TicketsBought;

  constructor(event: TicketsBought) {
    this._event = event;
  }

  get naffleId(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }

  get buyer(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._event.parameters[2].value.toBigInt();
  }

  get startingTicketId(): BigInt {
    return this._event.parameters[3].value.toBigInt();
  }

  get ticketPriceInWei(): BigInt {
    return this._event.parameters[4].value.toBigInt();
  }
}

export class L2NaffleDiamond__facetsResultDiamondFacetsStruct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get selectors(): Array<Bytes> {
    return this[1].toBytesArray();
  }
}

export class L2NaffleDiamond extends ethereum.SmartContract {
  static bind(address: Address): L2NaffleDiamond {
    return new L2NaffleDiamond("L2NaffleDiamond", address);
  }

  facetAddress(selector: Bytes): Address {
    let result = super.call("facetAddress", "facetAddress(bytes4):(address)", [
      ethereum.Value.fromFixedBytes(selector),
    ]);

    return result[0].toAddress();
  }

  try_facetAddress(selector: Bytes): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "facetAddress",
      "facetAddress(bytes4):(address)",
      [ethereum.Value.fromFixedBytes(selector)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  facetAddresses(): Array<Address> {
    let result = super.call(
      "facetAddresses",
      "facetAddresses():(address[])",
      [],
    );

    return result[0].toAddressArray();
  }

  try_facetAddresses(): ethereum.CallResult<Array<Address>> {
    let result = super.tryCall(
      "facetAddresses",
      "facetAddresses():(address[])",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddressArray());
  }

  facetFunctionSelectors(facet: Address): Array<Bytes> {
    let result = super.call(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(facet)],
    );

    return result[0].toBytesArray();
  }

  try_facetFunctionSelectors(
    facet: Address,
  ): ethereum.CallResult<Array<Bytes>> {
    let result = super.tryCall(
      "facetFunctionSelectors",
      "facetFunctionSelectors(address):(bytes4[])",
      [ethereum.Value.fromAddress(facet)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytesArray());
  }

  facets(): Array<L2NaffleDiamond__facetsResultDiamondFacetsStruct> {
    let result = super.call("facets", "facets():((address,bytes4[])[])", []);

    return result[0].toTupleArray<L2NaffleDiamond__facetsResultDiamondFacetsStruct>();
  }

  try_facets(): ethereum.CallResult<
    Array<L2NaffleDiamond__facetsResultDiamondFacetsStruct>
  > {
    let result = super.tryCall("facets", "facets():((address,bytes4[])[])", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      value[0].toTupleArray<L2NaffleDiamond__facetsResultDiamondFacetsStruct>(),
    );
  }

  getFallbackAddress(): Address {
    let result = super.call(
      "getFallbackAddress",
      "getFallbackAddress():(address)",
      [],
    );

    return result[0].toAddress();
  }

  try_getFallbackAddress(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "getFallbackAddress",
      "getFallbackAddress():(address)",
      [],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getRoleAdmin(role: Bytes): Bytes {
    let result = super.call("getRoleAdmin", "getRoleAdmin(bytes32):(bytes32)", [
      ethereum.Value.fromFixedBytes(role),
    ]);

    return result[0].toBytes();
  }

  try_getRoleAdmin(role: Bytes): ethereum.CallResult<Bytes> {
    let result = super.tryCall(
      "getRoleAdmin",
      "getRoleAdmin(bytes32):(bytes32)",
      [ethereum.Value.fromFixedBytes(role)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBytes());
  }

  hasRole(role: Bytes, account: Address): boolean {
    let result = super.call("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);

    return result[0].toBoolean();
  }

  try_hasRole(role: Bytes, account: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("hasRole", "hasRole(bytes32,address):(bool)", [
      ethereum.Value.fromFixedBytes(role),
      ethereum.Value.fromAddress(account),
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  nomineeOwner(): Address {
    let result = super.call("nomineeOwner", "nomineeOwner():(address)", []);

    return result[0].toAddress();
  }

  try_nomineeOwner(): ethereum.CallResult<Address> {
    let result = super.tryCall("nomineeOwner", "nomineeOwner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  supportsInterface(interfaceId: Bytes): boolean {
    let result = super.call(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );

    return result[0].toBoolean();
  }

  try_supportsInterface(interfaceId: Bytes): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "supportsInterface",
      "supportsInterface(bytes4):(bool)",
      [ethereum.Value.fromFixedBytes(interfaceId)],
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }
}

export class ConstructorCall extends ethereum.Call {
  get inputs(): ConstructorCall__Inputs {
    return new ConstructorCall__Inputs(this);
  }

  get outputs(): ConstructorCall__Outputs {
    return new ConstructorCall__Outputs(this);
  }
}

export class ConstructorCall__Inputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }

  get _admin(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get _platformFee(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }

  get _openEntryRatio(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }

  get _l1MessengerContractAddress(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get _l1NaffleContractAddress(): Address {
    return this._call.inputValues[4].value.toAddress();
  }

  get _paidTicketContractAddress(): Address {
    return this._call.inputValues[5].value.toAddress();
  }

  get _openEntryTicketContractAddress(): Address {
    return this._call.inputValues[6].value.toAddress();
  }
}

export class ConstructorCall__Outputs {
  _call: ConstructorCall;

  constructor(call: ConstructorCall) {
    this._call = call;
  }
}

export class DefaultCall extends ethereum.Call {
  get inputs(): DefaultCall__Inputs {
    return new DefaultCall__Inputs(this);
  }

  get outputs(): DefaultCall__Outputs {
    return new DefaultCall__Outputs(this);
  }
}

export class DefaultCall__Inputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class DefaultCall__Outputs {
  _call: DefaultCall;

  constructor(call: DefaultCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall extends ethereum.Call {
  get inputs(): AcceptOwnershipCall__Inputs {
    return new AcceptOwnershipCall__Inputs(this);
  }

  get outputs(): AcceptOwnershipCall__Outputs {
    return new AcceptOwnershipCall__Outputs(this);
  }
}

export class AcceptOwnershipCall__Inputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class AcceptOwnershipCall__Outputs {
  _call: AcceptOwnershipCall;

  constructor(call: AcceptOwnershipCall) {
    this._call = call;
  }
}

export class DiamondCutCall extends ethereum.Call {
  get inputs(): DiamondCutCall__Inputs {
    return new DiamondCutCall__Inputs(this);
  }

  get outputs(): DiamondCutCall__Outputs {
    return new DiamondCutCall__Outputs(this);
  }
}

export class DiamondCutCall__Inputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }

  get facetCuts(): Array<DiamondCutCallFacetCutsStruct> {
    return this._call.inputValues[0].value.toTupleArray<DiamondCutCallFacetCutsStruct>();
  }

  get target(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get data(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }
}

export class DiamondCutCall__Outputs {
  _call: DiamondCutCall;

  constructor(call: DiamondCutCall) {
    this._call = call;
  }
}

export class DiamondCutCallFacetCutsStruct extends ethereum.Tuple {
  get target(): Address {
    return this[0].toAddress();
  }

  get action(): i32 {
    return this[1].toI32();
  }

  get selectors(): Array<Bytes> {
    return this[2].toBytesArray();
  }
}

export class GrantRoleCall extends ethereum.Call {
  get inputs(): GrantRoleCall__Inputs {
    return new GrantRoleCall__Inputs(this);
  }

  get outputs(): GrantRoleCall__Outputs {
    return new GrantRoleCall__Outputs(this);
  }
}

export class GrantRoleCall__Inputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class GrantRoleCall__Outputs {
  _call: GrantRoleCall;

  constructor(call: GrantRoleCall) {
    this._call = call;
  }
}

export class RenounceRoleCall extends ethereum.Call {
  get inputs(): RenounceRoleCall__Inputs {
    return new RenounceRoleCall__Inputs(this);
  }

  get outputs(): RenounceRoleCall__Outputs {
    return new RenounceRoleCall__Outputs(this);
  }
}

export class RenounceRoleCall__Inputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }
}

export class RenounceRoleCall__Outputs {
  _call: RenounceRoleCall;

  constructor(call: RenounceRoleCall) {
    this._call = call;
  }
}

export class RevokeRoleCall extends ethereum.Call {
  get inputs(): RevokeRoleCall__Inputs {
    return new RevokeRoleCall__Inputs(this);
  }

  get outputs(): RevokeRoleCall__Outputs {
    return new RevokeRoleCall__Outputs(this);
  }
}

export class RevokeRoleCall__Inputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }

  get role(): Bytes {
    return this._call.inputValues[0].value.toBytes();
  }

  get account(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class RevokeRoleCall__Outputs {
  _call: RevokeRoleCall;

  constructor(call: RevokeRoleCall) {
    this._call = call;
  }
}

export class SetFallbackAddressCall extends ethereum.Call {
  get inputs(): SetFallbackAddressCall__Inputs {
    return new SetFallbackAddressCall__Inputs(this);
  }

  get outputs(): SetFallbackAddressCall__Outputs {
    return new SetFallbackAddressCall__Outputs(this);
  }
}

export class SetFallbackAddressCall__Inputs {
  _call: SetFallbackAddressCall;

  constructor(call: SetFallbackAddressCall) {
    this._call = call;
  }

  get fallbackAddress(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetFallbackAddressCall__Outputs {
  _call: SetFallbackAddressCall;

  constructor(call: SetFallbackAddressCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get account(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}
